@startuml
'https://plantuml.com/class-diagram


class Author{
- String name
- ArrayList<Title> titles
+ Author(String name)
+ void addTitle(Title title)
+ double calculateRoyalties()
+ String getName()
}
abstract class Title{
- String title
- String literatureType
- static final double RATE = 0.067574
+ Title(String title, String literatureType)
+ double calculateRoyalty()
# double calculatePoints()
# double convertLiteratureType()
}
class AudioBook{
- int durationInMinutes
- int copies
+ AudioBook(String title, String literatureType, int copies, int durationInMinutes)
# double calculatePoints()
}
class PrintedBook{
- int pages
- int copies
+ PrintedBook (String title, String literatureType, int copies, int pages)
# double calculatePoints()
}
abstract class NetTitle{
- int availability
- int rach
-int use
+ NetTitle(String title, String literatureType, int availability, int reach, int use)
# double getPseudoCopies()
- int getUseFactor()
}
abstract class PhysicalTitle{
# int copies
+ PhysicalTitle(String title, String literatureType, int copies)

}
class EBook{
- int characters
- boolean illustrated
+ Ebook(String title, String literatureType, int availability, int reach, int use, int characters, boolean illustrated)
- double calculatePages()
# double calculatePoints()
}
class EAudioBook{
- int durationInMinutes
+ EAudioBook(String title, String literatureType, int availability, int reach, int use, int durationInMinutes)
}
interface IAudioBook{
}
Author*--Title
Title<|--PhysicalTitle
Title<|--NetTitle
NetTitle<|--EBook
NetTitle<|--EAudioBook
PhysicalTitle<|--AudioBook
PhysicalTitle<|--PrintedBook
IAudioBook<|..AudioBook
IAudioBook<|..EAudioBook



@enduml